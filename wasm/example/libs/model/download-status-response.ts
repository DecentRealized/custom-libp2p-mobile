// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { DownloadStatus } from '../model/download-status';


export class DownloadStatusResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):DownloadStatusResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDownloadStatusResponse(bb:flatbuffers.ByteBuffer, obj?:DownloadStatusResponse):DownloadStatusResponse {
  return (obj || new DownloadStatusResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDownloadStatusResponse(bb:flatbuffers.ByteBuffer, obj?:DownloadStatusResponse):DownloadStatusResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DownloadStatusResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

output(obj?:DownloadStatus):DownloadStatus|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DownloadStatus()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

error():string|null
error(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
error(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startDownloadStatusResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addOutput(builder:flatbuffers.Builder, outputOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, outputOffset, 0);
}

static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, errorOffset, 0);
}

static endDownloadStatusResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDownloadStatusResponse(builder:flatbuffers.Builder, outputOffset:flatbuffers.Offset, errorOffset:flatbuffers.Offset):flatbuffers.Offset {
  DownloadStatusResponse.startDownloadStatusResponse(builder);
  DownloadStatusResponse.addOutput(builder, outputOffset);
  DownloadStatusResponse.addError(builder, errorOffset);
  return DownloadStatusResponse.endDownloadStatusResponse(builder);
}
}
